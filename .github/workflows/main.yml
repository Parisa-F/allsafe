name: Continuous Integration and Delivery

on:
  push:
    branches:
      - main
      - paris-dgango

env:
  DJANGO_TUTORIAL_API_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/backend/store
  DJANGO_TUTORIAL_NGINX_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/backend/nginx
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build the Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Set environment variables to .env
        run: |
          echo "DJANGO_TUTORIAL_API_IMAGE=$(echo ${{env.DJANGO_TUTORIAL_API_IMAGE}})" >> $GITHUB_ENV
          echo "DJANGO_TUTORIAL_NGINX_IMAGE=$(echo ${{env.DJANGO_TUTORIAL_NGINX_IMAGE}})" >> $GITHUB_ENV

      - name: Log in to GitHub Packages
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: echo ${PERSONAL_ACCESS_TOKEN} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin

      - name: Install Docker Compose
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq docker-compose

      - name: Build images
        run: |
          docker build -t ${{ env.DJANGO_TUTORIAL_API_IMAGE }} -f backend/Dockerfile.backend .
          docker build -t ${{ env.DJANGO_TUTORIAL_NGINX_IMAGE }} -f backend/Dockerfile.nginx .

      - name: Push images
        run: |
          docker push ${{ env.DJANGO_TUTORIAL_API_IMAGE }}
          docker push ${{ env.DJANGO_TUTORIAL_NGINX_IMAGE }}

  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.EC2_SSH_KEY }}"

      - name: Copy files to EC2
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp -o StrictHostKeyChecking=no -r ./backend ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/

      - name: Deploy images on AWS EC2
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
              cd /home/${{ secrets.EC2_USER }}/backend
              docker-compose down --rmi all -v
              docker build -t $DJANGO_TUTORIAL_API_IMAGE -f Dockerfile.backend .
              docker build -t $DJANGO_TUTORIAL_NGINX_IMAGE -f Dockerfile.nginx .
              docker-compose --env-file=.env up -d --build
              docker logout
          EOF
